{"mappings":"AASO,MAAMA,EAAS,UANlBC,SAASC,GACL,MAAMC,EAAcD,EAAME,QAAO,wBAA0B,KAC3DC,KAAKH,MAAMI,MAAQH,gBALpBE,KACHH,MAA0BK,SAASC,cAAc,WCgB9C,MAAMC,EAAQ,UATjBC,QACIL,KAAKM,SAAW,GAChBN,KAAKO,aAAe,GACpBP,KAAKQ,cAAgB,GACrBR,KAAKS,OAAS,EACdd,EAAOC,SAASI,KAAKS,OAAOC,0BAXpCV,KACIM,SAAW,GADfN,KAEIO,aAAe,GAFnBP,KAGIQ,cAAgB,GAHpBR,KAIIS,OAA0B,UCNjBE,EACTC,IAAIC,EAAWC,GACX,OAAOD,EAAIC,EAGfC,SAASC,EAAWC,GAChB,OAAOD,EAAIC,EAGfC,SAASC,EAAWC,GAChB,OAAOD,EAAIC,EAGfC,OAAOC,EAAWC,GACd,OAAOD,EAAIC,EAGfC,UACIlB,EACAC,EACAC,GAEA,OAAQF,GACJ,IAAK,IACD,OAAON,KAAKY,IAAIL,EAAcC,GAElC,IAAK,IACD,OAAOR,KAAKe,SAASR,EAAcC,GAEvC,IAAK,IACD,OAAOR,KAAKqB,OAAOd,EAAcC,GAErC,IAAK,IACD,OAAOR,KAAKkB,SAASX,EAAcC,WAGnC,MAAO,UCjCvB,wBCHOR,KACHyB,aAAkCvB,SAASC,cAAc,gBADtDH,KAEH0B,UAA4BxB,SAASC,cAAc,uBAG/CH,KAAKyB,aAAaE,iBACd,QACA3B,KAAK4B,YAAYC,KAAK7B,OAI9B4B,cACI,OAAI5B,KAAK0B,UAAUI,UAAUC,SAAS,mBAClC/B,KAAK0B,UAAUI,UAAUE,OAAO,kBAChC9B,SAAS+B,gBAAgBC,aAAa,aAAc,aACpDlC,KAAKyB,aAAaK,UAAUlB,IAAI,mBAIhCZ,KAAKyB,aAAaK,UAAUC,SAAS,mBACrC7B,SAAS+B,gBAAgBE,gBAAgB,mBACzCnC,KAAKyB,aAAaK,UAAUE,OAAO,oBAIvChC,KAAK0B,UAAUI,UAAUlB,IAAI,uBAC7BV,SAAS+B,gBAAgBC,aAAa,aAAc,YDtB5D,wBEAOlC,KACHoC,KAAuBlC,SAASC,cAAc,qBAD3CH,KAEHqC,WAAa,GAFVrC,KAGHsC,WAAa,IAAI3B,EAGbX,KAAKoC,KAAKT,iBAAiB,SAAUY,IAC5BA,EAAEC,OAAmBC,QAAQ,WAC9BzC,KAAK0C,SAASH,MAIlBnC,EAAMK,QAAQd,EAAOC,SAASQ,EAAMK,OAAOC,YAGnDgC,SAASH,GACL,MAAMtC,EAASsC,EAAEC,OAA6BG,QAAQ1C,MACtD,OAAQA,GACJ,IAAK,IACDD,KAAK4C,eAAe,KACpB,MAEJ,IAAK,IACD5C,KAAK4C,eAAe,KACpB,MAEJ,IAAK,IACD5C,KAAK4C,eAAe,KACpB,MAEJ,IAAK,IACD5C,KAAK4C,eAAe,KACpB,MAEJ,IAAK,IACD5C,KAAK4C,eAAe,KACpB,MAEJ,IAAK,MACG5C,KAAKqC,aACLrC,KAAKqC,WAAarC,KAAKqC,WAAWQ,MAAM,GAAG,GAC3ClD,EAAOC,SAASI,KAAKqC,aAEzB,MAEJ,IAAK,QACDjC,EAAMC,QACNL,KAAKqC,WAAa,GAClB,MAEJ,IAAK,IACIrC,KAAKqC,WAAWS,SAAS,OAC1B9C,KAAKqC,YAAcpC,EACnBN,EAAOC,SAASI,KAAKqC,aAEzB,cAIArC,KAAKqC,YAAcpC,EACnBN,EAAOC,SAASI,KAAKqC,aAIjCO,eAAetC,GACM,MAAbA,GAAoBF,EAAMI,eAC1BR,KAAK+C,cACL3C,EAAMK,OAAST,KAAKsC,WAAWd,UAC3BpB,EAAME,SACN0C,WAAW5C,EAAMG,aAAaR,QAAO,KAAO,KAC5CiD,WAAW5C,EAAMI,cAAcT,QAAO,KAAO,MAEjDC,KAAKiD,eACLjD,KAAKkD,uBAELlD,KAAK+C,cACL3C,EAAME,SAAWA,EACjBN,KAAKkD,sBAIbH,cACI,GAAuB,MAAnB3C,EAAME,UAAqBF,EAAMG,aAArC,CAKA,IAAKH,EAAMG,aAGP,OAFAH,EAAMG,aAAeP,KAAKqC,gBAC1BrC,KAAKqC,WAAa,IAIlBjC,EAAMG,eACNH,EAAMI,cAAgBR,KAAKqC,YAG3BjC,EAAMK,SACNL,EAAMG,aAAeH,EAAMK,OAAO0C,iBAClCnD,KAAKiD,gBAGL7C,EAAMG,cAAgBH,EAAMI,gBAC5BJ,EAAMK,OAAST,KAAKsC,WAAWd,UAC3BpB,EAAME,SACN0C,WAAW5C,EAAMG,aAAaR,QAAO,KAAO,KAC5CiD,WAAW5C,EAAMI,cAAcT,QAAO,KAAO,MAEjDC,KAAKiD,qBAzBLjD,KAAKoD,sBA6BbA,sBACI,MAAMC,GAAkBrD,KAAKqC,WAC7BrC,KAAKqC,WAAagB,EAAe3C,WACjCN,EAAMG,aAAeP,KAAKqC,WAG9BY,eACItD,EAAOC,SAASQ,EAAMK,OAAO0C,kBAGjCD,qBACI9C,EAAMI,cAAgB,GACtBR,KAAKqC,WAAa","sources":["src/components/render-input.ts","src/state/calculator-state.ts","src/components/calculator.ts","src/app.ts","src/components/toggle-theme.ts","src/components/user-input.ts"],"sourcesContent":["export class RenderInput {\n    input: HTMLInputElement = document.querySelector('input')!;\n\n    setInput(input: string) {\n        const inputCommas = input.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        this.input.value = inputCommas;\n    }\n}\n\nexport const render = new RenderInput();\n","import {render} from '../components/render-input';\n\nclass CalculatorState {\n    operator = '';\n    firstOperand = '';\n    secondOperand = '';\n    result: number | string = 0;\n\n    reset() {\n        this.operator = '';\n        this.firstOperand = '';\n        this.secondOperand = '';\n        this.result = 0;\n        render.setInput(this.result.toString());\n    }\n}\n\nexport const state = new CalculatorState();\n","export class Calculator {\n    add(a: number, b: number): number {\n        return a + b;\n    }\n\n    subtract(a: number, b: number): number {\n        return a - b;\n    }\n\n    multiply(a: number, b: number): number {\n        return a * b;\n    }\n\n    divide(a: number, b: number): number {\n        return a / b;\n    }\n\n    calculate(\n        operator: string,\n        firstOperand: number,\n        secondOperand: number,\n    ): number | string {\n        switch (operator) {\n            case '+':\n                return this.add(firstOperand, secondOperand);\n\n            case '-':\n                return this.subtract(firstOperand, secondOperand);\n\n            case '/':\n                return this.divide(firstOperand, secondOperand);\n\n            case '*':\n                return this.multiply(firstOperand, secondOperand);\n\n            default:\n                return 'Error';\n        }\n    }\n}\n","import {ToggleTheme} from './components/toggle-theme';\nimport {UserInput} from './components/user-input';\n\nnew ToggleTheme();\nnew UserInput();\n","export class ToggleTheme {\n    toggleSwitch: HTMLButtonElement = document.querySelector('.toggle__btn')!;\n    toggleDiv: HTMLDivElement = document.querySelector('.toggle__background')!;\n\n    constructor() {\n        this.toggleSwitch.addEventListener(\n            'click',\n            this.switchTheme.bind(this),\n        );\n    }\n\n    switchTheme(): void {\n        if (this.toggleDiv.classList.contains('toggle__btn--2')) {\n            this.toggleDiv.classList.remove('toggle__btn--2');\n            document.documentElement.setAttribute('data-theme', 'dark');\n            this.toggleSwitch.classList.add('toggle__btn--3');\n            return;\n        }\n\n        if (this.toggleSwitch.classList.contains('toggle__btn--3')) {\n            document.documentElement.removeAttribute('data-theme');\n            this.toggleSwitch.classList.remove('toggle__btn--3');\n            return;\n        }\n\n        this.toggleDiv.classList.add('toggle__btn--2');\n        document.documentElement.setAttribute('data-theme', 'light');\n    }\n}\n","import {state} from '../state/calculator-state';\nimport {Calculator} from './calculator';\nimport {render} from './render-input';\n\nexport class UserInput {\n    keys: HTMLDivElement = document.querySelector('.calculator__keys')!;\n    inputChars = '';\n    calculator = new Calculator();\n\n    constructor() {\n        this.keys.addEventListener('click', (e) => {\n            if ((e.target as Element).matches('button')) {\n                this.getInput(e);\n            }\n        });\n\n        if (state.result) render.setInput(state.result.toString());\n    }\n\n    getInput(e: MouseEvent) {\n        const value = (e.target as HTMLButtonElement).dataset.value;\n        switch (value) {\n            case '+':\n                this.handleOperator('+');\n                break;\n\n            case '-':\n                this.handleOperator('-');\n                break;\n\n            case '*':\n                this.handleOperator('*');\n                break;\n\n            case '/':\n                this.handleOperator('/');\n                break;\n\n            case '=':\n                this.handleOperator('=');\n                break;\n\n            case 'del':\n                if (this.inputChars) {\n                    this.inputChars = this.inputChars.slice(0, -1);\n                    render.setInput(this.inputChars);\n                }\n                break;\n\n            case 'reset':\n                state.reset();\n                this.inputChars = '';\n                break;\n\n            case '.': {\n                if (!this.inputChars.includes('.')) {\n                    this.inputChars += value;\n                    render.setInput(this.inputChars);\n                }\n                break;\n            }\n\n            default:\n                this.inputChars += value;\n                render.setInput(this.inputChars);\n        }\n    }\n\n    handleOperator(operator: string) {\n        if (operator === '=' && state.secondOperand) {\n            this.handleInput();\n            state.result = this.calculator.calculate(\n                state.operator,\n                parseFloat(state.firstOperand.replace(/,/g, '')),\n                parseFloat(state.secondOperand.replace(/,/g, '')),\n            );\n            this.renderResult();\n            this.resetSecondOperand();\n        } else {\n            this.handleInput();\n            state.operator = operator;\n            this.resetSecondOperand();\n        }\n    }\n\n    handleInput() {\n        if (state.operator === '-' && !state.firstOperand) {\n            this.handleNegativeInput();\n            return;\n        }\n\n        if (!state.firstOperand) {\n            state.firstOperand = this.inputChars;\n            this.inputChars = '';\n            return;\n        }\n\n        if (state.firstOperand) {\n            state.secondOperand = this.inputChars;\n        }\n\n        if (state.result) {\n            state.firstOperand = state.result.toLocaleString();\n            this.renderResult();\n        }\n\n        if (state.firstOperand && state.secondOperand) {\n            state.result = this.calculator.calculate(\n                state.operator,\n                parseFloat(state.firstOperand.replace(/,/g, '')),\n                parseFloat(state.secondOperand.replace(/,/g, '')),\n            );\n            this.renderResult();\n        }\n    }\n\n    handleNegativeInput() {\n        const negativeNumber = -this.inputChars;\n        this.inputChars = negativeNumber.toString();\n        state.firstOperand = this.inputChars;\n    }\n\n    renderResult() {\n        render.setInput(state.result.toLocaleString());\n    }\n\n    resetSecondOperand() {\n        state.secondOperand = '';\n        this.inputChars = '';\n    }\n}\n"],"names":["$7b9e2391fea9a92c$export$b3890eb0ae9dca99","setInput","input","inputCommas","replace","this","value","document","querySelector","$4884ce8cdb691a0e$export$ca000e230c0caa3e","reset","operator","firstOperand","secondOperand","result","toString","$bff85d5a24c6de75$export$770682f56f7e9e8f","add","a","b","subtract","a1","b1","multiply","a2","b2","divide","a3","b3","calculate","toggleSwitch","toggleDiv","addEventListener","switchTheme","bind","classList","contains","remove","documentElement","setAttribute","removeAttribute","keys","inputChars","calculator","e","target","matches","getInput","dataset","handleOperator","slice","includes","handleInput","parseFloat","renderResult","resetSecondOperand","toLocaleString","handleNegativeInput","negativeNumber"],"version":3,"file":"index.7b068707.js.map"}